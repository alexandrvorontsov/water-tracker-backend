{
  "openapi" : "3.0.1",
  "info" : {
    "version" : "2.0.3",
    "title" : "Watertracker API",
    "description" : "API documentation for project Watertracker"
  },
  "consumes" : [ "application/json", "multipart/form-data" ],
  "produces" : [ "application/json" ],
  "servers" : [ {
    "url" : "http://localhost:5000"
  } ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "User information endpoints"
    },
    {
      "name": "Water",
      "description": "Water information endpoints"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Such e-mail already exist",
            "content": {}
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "E-mail or password invalid",
            "content": {}
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logaut",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message" : {
                      "type" : "string",
                      "description" : "Respons message ",
                      "example" : "Signout successful"
                    }
                  },
                  "example": { "message": "Signout successful" }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": " Not authorized",
            "content": {}
          }
        }
      }
    },
    "/auth/refresh": {
      "get": {
        "tags": ["Auth"],
        "summary": "User refresh",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": " Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "User's information",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": " Not authorized",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Update user's information",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": " Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user's avatar",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Avatar image",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": ["avatar"],
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "User's avatar image"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avatarURL": {
                      "type": "string",
                      "description": "Avatar URL",
                      "example": "http://cloudy.com/avatar/taras.png"
                    }
                  },
                  "example": {
                    "avatarURL": "http://cloudy.com/avatar/taras.png"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": " Not authorized",
            "content": {}
<<<<<<< HEAD
          }
        }
      }
    },
    "/users/waterrate": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user's water norma",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Water norma",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "waterNorma": {
                    "type": "number",
                    "description": "User water norma",
                    "example": 2000
                  }
                },
                "example": {
                  "waterNorma": 2000
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "waterNorma": {
                      "type": "number",
                      "description": "User water norma",
                      "example": 2000
                    }
                  },
                  "example": {
                    "waterNorma": 2000
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": " Not authorized",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "date"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "12345678"
          },
          "date": {
            "type": "string",
            "description": "Registration date",
            "example": "2024-01-30"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "date": {
            "type": "string",
            "description": "Registration date",
            "example": "2024-01-30"
          },
          "token": {
            "type": "string",
            "description": "Access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Yjk1NGM3MWYzZTc3OGIwN2ZjMmY2MSIsImlhdCI6MTcwNjY0NTAxNCwiZXhwIjoxNzA2NzI3ODE0fQ.T2hWqVfkd1iYRgPZ1fRqImq78BuukizB6wXMN0kqOM4"
          }
        },
        "example": {
          "email": "testuser@ukr.net",
          "date": "2024-01-30",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Yjk1NGM3MWYzZTc3OGIwN2ZjMmY2MSIsImlhdCI6MTcwNjY0NTAxNCwiZXhwIjoxNzA2NzI3ODE0fQ.T2hWqVfkd1iYRgPZ1fRqImq78BuukizB6wXMN0kqOM4"
        }
      },
      "AuthenticationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "12345678"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "date": {
            "type": "string",
            "description": "Registration date",
            "example": "2024-01-30"
          },
          "token": {
            "type": "string",
            "description": "Access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Yjk1NGM3MWYzZTc3OGIwN2ZjMmY2MSIsImlhdCI6MTcwNjY0NTAxNCwiZXhwIjoxNzA2NzI3ODE0fQ.T2hWqVfkd1iYRgPZ1fRqImq78BuukizB6wXMN0kqOM4"
          },
          "waterNorma": {
            "type": "string",
            "description": "User water norma",
            "example": "2000"
          },
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "avatarURL": {
            "type": "string",
            "description": "Avatar URL",
            "example": "http://cloudy.com/avatar/taras.png"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "man"
          }
        },
        "example": {
          "email": "testuser@ukr.net",
          "date": "2024-01-30",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Yjk1NGM3MWYzZTc3OGIwN2ZjMmY2MSIsImlhdCI6MTcwNjY0NTAxNCwiZXhwIjoxNzA2NzI3ODE0fQ.T2hWqVfkd1iYRgPZ1fRqImq78BuukizB6wXMN0kqOM4",
          "username": "User",
          "waterNorma": "2000",
          "avatarURL": "http://cloudy.com/avatar/taras.png",
          "gender": "man"
        }
      },
      "UpdateUserInfoRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "12345678"
          },
          "newPassword": {
            "type": "number",
            "description": "New user's password",
            "example": "12345678"
          },
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "man"
          }
        },
        "example": {
          "email": "testuser@ukr.net",
          "username": "User",
          "gender": "man",
          "password": "12345678",
          "newPassword": "87654321"
        }
      },
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "date": {
            "type": "string",
            "description": "Registration date",
            "example": "2024-01-30"
          },
          "waterNorma": {
            "type": "number",
            "description": "User water norma",
            "example": 2000
          },
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "avatarURL": {
            "type": "string",
            "description": "Avatar URL",
            "example": "http://cloudy.com/avatar/taras.png"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "man"
          }
        },
        "example": {
          "email": "testuser@ukr.net",
          "date": "2024-01-30",
          "username": "User",
          "waterNorma": 2000,
          "avatarURL": "http://cloudy.com/avatar/taras.png",
          "gender": "man"
        }
      }
    },
=======
          }
        }
      }
    },
    "/users/waterrate": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user's water norma",
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Water norma",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "waterNorma": {
                    "type": "number",
                    "description": "User water norma",
                    "example": 2000
                  }
                },
                "example": {
                  "waterNorma": 2000
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "waterNorma": {
                      "type": "number",
                      "description": "User water norma",
                      "example": 2000
                    }
                  },
                  "example": {
                    "waterNorma": 2000
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": " Not authorized",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "date"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "12345678"
          },
          "date": {
            "type": "string",
            "description": "Registration date",
            "example": "2024-01-30"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "date": {
            "type": "string",
            "description": "Registration date",
            "example": "2024-01-30"
          },
          "token": {
            "type": "string",
            "description": "Access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Yjk1NGM3MWYzZTc3OGIwN2ZjMmY2MSIsImlhdCI6MTcwNjY0NTAxNCwiZXhwIjoxNzA2NzI3ODE0fQ.T2hWqVfkd1iYRgPZ1fRqImq78BuukizB6wXMN0kqOM4"
          }
        },
        "example": {
          "email": "testuser@ukr.net",
          "date": "2024-01-30",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Yjk1NGM3MWYzZTc3OGIwN2ZjMmY2MSIsImlhdCI6MTcwNjY0NTAxNCwiZXhwIjoxNzA2NzI3ODE0fQ.T2hWqVfkd1iYRgPZ1fRqImq78BuukizB6wXMN0kqOM4"
        }
      },
      "AuthenticationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "12345678"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "date": {
            "type": "string",
            "description": "Registration date",
            "example": "2024-01-30"
          },
          "token": {
            "type": "string",
            "description": "Access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Yjk1NGM3MWYzZTc3OGIwN2ZjMmY2MSIsImlhdCI6MTcwNjY0NTAxNCwiZXhwIjoxNzA2NzI3ODE0fQ.T2hWqVfkd1iYRgPZ1fRqImq78BuukizB6wXMN0kqOM4"
          },
          "waterNorma": {
            "type": "string",
            "description": "User water norma",
            "example": "2000"
          },
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "avatarURL": {
            "type": "string",
            "description": "Avatar URL",
            "example": "http://cloudy.com/avatar/taras.png"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "man"
          }
        },
        "example": {
          "email": "testuser@ukr.net",
          "date": "2024-01-30",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Yjk1NGM3MWYzZTc3OGIwN2ZjMmY2MSIsImlhdCI6MTcwNjY0NTAxNCwiZXhwIjoxNzA2NzI3ODE0fQ.T2hWqVfkd1iYRgPZ1fRqImq78BuukizB6wXMN0kqOM4",
          "username": "User",
          "waterNorma": "2000",
          "avatarURL": "http://cloudy.com/avatar/taras.png",
          "gender": "man"
        }
      },
      "UpdateUserInfoRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "12345678"
          },
          "newPassword": {
            "type": "number",
            "description": "New user's password",
            "example": "12345678"
          },
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "man"
          }
        },
        "example": {
          "email": "testuser@ukr.net",
          "username": "User",
          "gender": "man",
          "password": "12345678",
          "newPassword": "87654321"
        }
      },
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "date": {
            "type": "string",
            "description": "Registration date",
            "example": "2024-01-30"
          },
          "waterNorma": {
            "type": "number",
            "description": "User water norma",
            "example": 2000
          },
          "username": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "avatarURL": {
            "type": "string",
            "description": "Avatar URL",
            "example": "http://cloudy.com/avatar/taras.png"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "man"
          }
        },
        "example": {
          "email": "testuser@ukr.net",
          "date": "2024-01-30",
          "username": "User",
          "waterNorma": 2000,
          "avatarURL": "http://cloudy.com/avatar/taras.png",
          "gender": "man"
        }
      }
    },
>>>>>>> a39ab9c3a3fea92bf5d2b9dd808615a948f31f99
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
<<<<<<< HEAD
}
=======
}
>>>>>>> a39ab9c3a3fea92bf5d2b9dd808615a948f31f99
